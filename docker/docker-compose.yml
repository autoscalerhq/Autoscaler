
services:
  nats1:
    image: docker.io/nats:2.10-alpine
    ports:
      - "4222:4222"
      - "8222:8222"
    volumes:
      - './data/nats/1:/data'
    command:
      - "--name=nats1"
      - "--cluster_name=c1"
      - "--cluster=nats://nats1:6222"
      - "--routes=nats-route://nats1:6222,nats-route://nats2:6222"
      - "--http_port=8222"
      - "--js"
      - "--sd=/data"

  nats2:
    image: docker.io/nats:2.10-alpine
    ports:
      - "4223:4222"
      - "8223:8222"
    volumes:
      - './data/nats/2:/data'
    command:
      - "--name=nats2"
      - "--cluster_name=c1"
      - "--cluster=nats://nats2:6222"
      - "--routes=nats-route://nats1:6222,nats-route://nats2:6222"
      - "--http_port=8222"
      - "--js"
      - "--sd=/data"

  cerbos:
    image: ghcr.io/cerbos/cerbos:0.37.0
    ports:
      - '3593:3593'
      - '3592:3592'
    volumes:
      - ../policy:/policies

  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-postgresql:latest
    ports:
      - "3567:3567"
    environment:
      POSTGRESQL_CONNECTION_URI: postgresql://postgres:password@timescaledb:5432/postgres
    depends_on:
      - timescaledb
    restart: unless-stopped
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5

  timescaledb:
    image: timescale/timescaledb:latest-pg16
    container_name: timescaledb
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: password
#      POSTGRES_DB: supertokens
    volumes:
      - './data/postgres:/var/lib/postgresql/data'

  dkron1:
    image: dkron/dkron
    container_name: dkron1
    command: agent --server --bootstrap-expect=1 --enable-prometheus --node-name=node1
    ports:
      - "8090:8080"
      - "8946:8946"
      - "6868:6868"
    volumes:
      - './data/dkron:/dkron/data'
    environment:
      - DKRON_LOG_LEVEL=debug

  nats-nui:
    image: ghcr.io/nats-nui/nui:latest
    restart: always
    ports:
      - "31311:31311"
  
  flagd:
    image: ghcr.io/open-feature/flagd:v0.11.1
    command:
      - start
      - --cors-origin
      - '*'
      - --sources
      - '[{"uri":"etc/flagd/flags.json","provider":"file","selector":"etc/flagd/flags.json"}]'
    volumes:
      - ./../configs/flags.json:/etc/flagd/flags.json
    ports:
      - '8013:8013'
      - '8016:8016'

# monitoring
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3050:3000"
    depends_on:
      - prometheus
      - tempo
      - loki
      - pyroscope

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - './config/prometheus.yml:/etc/prometheus/prometheus.yml'
      - './data/prometheus:/prometheus'

  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    ports:
      - "3200:3200"
    volumes:
      - './data/tempo:/var/tempo'
      - './config/tempo-config.yaml:/etc/tempo/tempo.yaml'
    command: [ "-config.file=/etc/tempo/tempo.yaml" ]

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"

  pyroscope:
    image: pyroscope/pyroscope:latest
    container_name: pyroscope
    ports:
      - "4040:4040"
    command: ["server"]
