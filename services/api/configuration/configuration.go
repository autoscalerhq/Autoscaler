// Code generated by docuconf. DO NOT EDIT.
package configuration

import (
	"github.com/autoscalerhq/docuconf"
	"os"
	"errors"
)

type Configuration struct { 

  // Connection string to the database
  // 
  ConnectionString string `env:"CONNECTION_STRING"` 

  // The address the go backend to bind to, required in production, default value works locally
  // 
  ListenAddress string `env:"LISTEN_ADDRESS"` 

  // URL of the SuperTokens core instance
  // 
  SuperTokensConnectionUri string `env:"SUPER_TOKENS_CONNECTION_URI"` 

  // The super tokens api key, required for production but not local development
  // 
  SuperTokensApiKey string `env:"SUPER_TOKENS_API_KEY"` 

  // The address of the go backend, required for production, default value works locally
  // 
  SuperTokensAppApiDomain string `env:"SUPER_TOKENS_APP_API_DOMAIN"` 

  // The address of the react frontend
  // 
  SuperTokensAppWebsiteDomain string `env:"SUPER_TOKENS_APP_WEBSITE_DOMAIN"`
}

func LoadConfiguration(path string) (Configuration, error) {
    defaultEnv := NewConfiguration()
	if _, err := os.Stat(path); errors.Is(err, os.ErrNotExist) {
		return defaultEnv, nil
	}
	env, err := docuconf.LoadDotEnv(path, defaultEnv)
	return env, err
}

func NewConfiguration() Configuration {
	return Configuration{ 
		ConnectionString: "", 
		ListenAddress: ":8888", 
		SuperTokensConnectionUri: "http://localhost:3567", 
		SuperTokensApiKey: "", 
		SuperTokensAppApiDomain: "http://localhost:8080", 
		SuperTokensAppWebsiteDomain: "http://localhost:3000",
	}
}

